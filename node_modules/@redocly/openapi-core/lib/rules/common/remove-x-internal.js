"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoveXInternal = void 0;
const utils_1 = require("../../utils");
const DEFAULT_INTERNAL_PROPERTY_NAME = 'x-internal';
const RemoveXInternal = ({ internalFlagProperty }) => {
    const hiddenTag = internalFlagProperty || DEFAULT_INTERNAL_PROPERTY_NAME;
    function removeInternal(node, ctx) {
        const { parent, key } = ctx;
        let didDelete = false;
        if (Array.isArray(node)) {
            for (let i = 0; i < node.length; i++) {
                if (node[i] && node[i][hiddenTag]) {
                    node.splice(i, 1);
                    didDelete = true;
                    i--;
                }
            }
        }
        else if (utils_1.isPlainObject(node)) {
            for (const key of Object.keys(node)) {
                if (node[key][hiddenTag]) {
                    delete node[key];
                    didDelete = true;
                }
            }
        }
        if (didDelete && (utils_1.isEmptyObject(node) || utils_1.isEmptyArray(node))) {
            delete parent[key];
        }
    }
    return {
        any: {
            enter: (node, ctx) => {
                removeInternal(node, ctx);
            }
        }
    };
};
exports.RemoveXInternal = RemoveXInternal;
